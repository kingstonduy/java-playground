/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.14/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'application'
}


repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

ext {
    lombokVersion = '1.18.36'
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-log4j2"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'com.github.f4b6a3:uuid-creator:5.3.6'
    implementation libs.guava
}

configurations.all {
//    Spring Boot pulls Logback by default via spring-boot-starter-logging
//    Having both on the classpath makes Spring Boot and SLF4J disagree about which backend is “in charge”,
//    which caused your crash. Those two excludes surgically remove the defaults so only Log4j2 remains.
    exclude group: "ch.qos.logback", module: "logback-classic"
    exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
}


testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.12.1')
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.example.App'
}
